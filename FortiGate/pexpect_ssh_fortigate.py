import time
import subprocess
import platform
import pexpect
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –¥–ª—è FortiGate
FORTIGATE_IP = "192.168.1.99"
FORTIGATE_USER = "admin"
FORTIGATE_PASSWORD = "password"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è FortiGate
FORTIGATE_CMD_ENABLE_BOTH = "execute auto-script start Enable-Both-Tunnels"
FORTIGATE_CMD_TUN1 = "execute auto-script start Tun1-Enable-Tun2-Disable"
FORTIGATE_CMD_TUN2 = "execute auto-script start Tun2-Enable-Tun1-Disable"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ IP-–∞–¥—Ä–µ—Å–∞
MONITOR_IP = "10.0.0.2"
PING_INTERVAL = 1
PING_FAIL_LIMIT = 2

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_FILE = "/tmp/mnt/EXT/home/ping_vpn_fgt.log"
LOG_CLEAR_INTERVAL = timedelta(days=1)  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–∞
last_log_clear_time = datetime.now()  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–∞

def log_message(message):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥-—Ñ–∞–π–ª –∏ –Ω–∞ —ç–∫—Ä–∞–Ω."""
    global last_log_clear_time
    current_time = datetime.now()

    # –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–∞ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏
    if current_time - last_log_clear_time >= LOG_CLEAR_INTERVAL:
        with open(LOG_FILE, "w") as log_file:
            log_file.write(f"{current_time} ‚Äî –õ–æ–≥ –æ—á–∏—â–µ–Ω.\n")
        last_log_clear_time = current_time

    # –ó–∞–ø–∏—Å—å –≤ –ª–æ–≥
    with open(LOG_FILE, "a") as log_file:
        log_file.write(f"{current_time} ‚Äî {message}\n")
    print(message)  # –î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞

def is_host_reachable(ip):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ö–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ ping."""
    param = "-n" if platform.system().lower() == "windows" else "-c"
    result = subprocess.run(["ping", param, "1", "-W", "1", ip], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    return result.returncode == 0

def ssh_execute_command(host, user, password, command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SSH-–∫–æ–º–∞–Ω–¥—É —Å –≤–≤–æ–¥–æ–º –ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ `pexpect`."""
    try:
        log_message(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ FortiGate: {command}")
        ssh_cmd = f"ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {user}@{host} {command}"
        child = pexpect.spawn(ssh_cmd, timeout=30)
        child.expect("password:")
        child.sendline(password)
        child.expect(pexpect.EOF)
        output = child.before.decode(errors="ignore")
        log_message(output)
    except Exception as e:
        log_message(f"–û—à–∏–±–∫–∞ SSH-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")


def monitor_and_react():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—É–Ω–Ω–µ–ª–µ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Å–≤—è–∑–∏."""
    log_message("üîÑ –í–∫–ª—é—á–∞–µ–º –æ–±–∞ —Ç—É–Ω–Ω–µ–ª—è –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    ssh_execute_command(FORTIGATE_IP, FORTIGATE_USER, FORTIGATE_PASSWORD, FORTIGATE_CMD_ENABLE_BOTH)

    log_message("‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    time.sleep(2)

    last_script = None
    failed_pings = 0

    while True:
        if is_host_reachable(MONITOR_IP):
            log_message(f"‚úÖ {MONITOR_IP} –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
            failed_pings = 0
            time.sleep(PING_INTERVAL)
            continue

        failed_pings += 1
        log_message(f"‚ö†Ô∏è {MONITOR_IP} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ({failed_pings}/{PING_FAIL_LIMIT})")

        if failed_pings < PING_FAIL_LIMIT:
            time.sleep(PING_INTERVAL)
            continue

        log_message(f"üö® –°–≤—è–∑—å —Å {MONITOR_IP} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç—É–Ω–Ω–µ–ª–∏...")

        if last_script == "Tun1-Enable-Tun2-Disable":
            ssh_execute_command(FORTIGATE_IP, FORTIGATE_USER, FORTIGATE_PASSWORD, FORTIGATE_CMD_TUN2)
            last_script = "Tun2-Enable-Tun1-Disable"
        else:
            ssh_execute_command(FORTIGATE_IP, FORTIGATE_USER, FORTIGATE_PASSWORD, FORTIGATE_CMD_TUN1)
            last_script = "Tun1-Enable-Tun2-Disable"

        failed_pings = 0

        retry_pings = 0
        while not is_host_reachable(MONITOR_IP):
            retry_pings += 1
            log_message(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–∏ —Å {MONITOR_IP} ({retry_pings}/{PING_FAIL_LIMIT})...")
            if retry_pings >= PING_FAIL_LIMIT:
                log_message(f"üîÅ –°–≤—è–∑—å –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç—É–Ω–Ω–µ–ª–∏ –æ–±—Ä–∞—Ç–Ω–æ!")
                if last_script == "Tun1-Enable-Tun2-Disable":
                    ssh_execute_command(FORTIGATE_IP, FORTIGATE_USER, FORTIGATE_PASSWORD, FORTIGATE_CMD_TUN2)
                    last_script = "Tun2-Enable-Tun1-Disable"
                else:
                    ssh_execute_command(FORTIGATE_IP, FORTIGATE_USER, FORTIGATE_PASSWORD, FORTIGATE_CMD_TUN1)
                retry_pings = 0
                break

            time.sleep(PING_INTERVAL)

        log_message(f"‚úÖ –°–≤—è–∑—å —Å {MONITOR_IP} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
        failed_pings = 0

if __name__ == "__main__":
    monitor_and_react()
